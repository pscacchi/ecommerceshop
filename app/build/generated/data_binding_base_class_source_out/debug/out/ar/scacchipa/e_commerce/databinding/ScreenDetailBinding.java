// Generated by view binder compiler. Do not edit!
package ar.scacchipa.e_commerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ar.scacchipa.e_commerce.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ScreenDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton addItemButton;

  @NonNull
  public final ShapeableImageView backGroundView;

  @NonNull
  public final AppCompatTextView category;

  @NonNull
  public final AppCompatImageView detailItemImage;

  @NonNull
  public final AppCompatImageView favorite;

  @NonNull
  public final AppCompatTextView ranking;

  @NonNull
  public final AppCompatTextView title;

  private ScreenDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton addItemButton, @NonNull ShapeableImageView backGroundView,
      @NonNull AppCompatTextView category, @NonNull AppCompatImageView detailItemImage,
      @NonNull AppCompatImageView favorite, @NonNull AppCompatTextView ranking,
      @NonNull AppCompatTextView title) {
    this.rootView = rootView;
    this.addItemButton = addItemButton;
    this.backGroundView = backGroundView;
    this.category = category;
    this.detailItemImage = detailItemImage;
    this.favorite = favorite;
    this.ranking = ranking;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScreenDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScreenDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.screen_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScreenDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addItemButton;
      AppCompatButton addItemButton = ViewBindings.findChildViewById(rootView, id);
      if (addItemButton == null) {
        break missingId;
      }

      id = R.id.backGroundView;
      ShapeableImageView backGroundView = ViewBindings.findChildViewById(rootView, id);
      if (backGroundView == null) {
        break missingId;
      }

      id = R.id.category;
      AppCompatTextView category = ViewBindings.findChildViewById(rootView, id);
      if (category == null) {
        break missingId;
      }

      id = R.id.detailItemImage;
      AppCompatImageView detailItemImage = ViewBindings.findChildViewById(rootView, id);
      if (detailItemImage == null) {
        break missingId;
      }

      id = R.id.favorite;
      AppCompatImageView favorite = ViewBindings.findChildViewById(rootView, id);
      if (favorite == null) {
        break missingId;
      }

      id = R.id.ranking;
      AppCompatTextView ranking = ViewBindings.findChildViewById(rootView, id);
      if (ranking == null) {
        break missingId;
      }

      id = R.id.title;
      AppCompatTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ScreenDetailBinding((ConstraintLayout) rootView, addItemButton, backGroundView,
          category, detailItemImage, favorite, ranking, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
